import{K as n}from"./app.4e8a7c5f.js";import{_ as s}from"./plugin-vue_export-helper.21dcd24c.js";const a={},t=n(`<p>It is possible to use multiple carriers. The following carriers are supported:</p><table><thead><tr><th>ID</th><th>Name</th><th>Carrier class</th><th>Consignment class</th></tr></thead><tbody><tr><td>1</td><td>PostNL</td><td><code>Model\\Carrier\\CarrierPostNL</code></td><td><code>Model\\Consignment\\PostNLConsignment</code></td></tr><tr><td>2</td><td>Bpost</td><td><code>Model\\Carrier\\CarrierBpost</code></td><td><code>Model\\Consignment\\BpostConsignment</code></td></tr><tr><td>3</td><td>DPD</td><td><code>Model\\Carrier\\CarrierDPD</code></td><td><code>Model\\Consignment\\DPDConsignment</code></td></tr><tr><td>5</td><td>Instabox</td><td><code>Model\\Carrier\\CarrierInstabox</code></td><td><code>Model\\Consignment\\InstaboxConsignment</code></td></tr></tbody></table><p>Please note, Instabox is only available in the Netherlands as of now, and can only ship to Dutch addresses. You can query which carriers are available like this:</p><div class="language-php ext-php"><pre class="language-php"><code><span class="token variable">$options</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">CarrierOptionsWebService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">setApiKey</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api_key_from_backoffice&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">getCarrierOptions</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;shop_id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>You can get the required <code>shop_id</code> from <code>AccountWebService</code>, the only shop returned will be the shop belonging to the API key that is used. Since the <code>shop_id</code> will not change unless the API key changes, we advise you to store the <code>shop_id</code> until the user updates the API key.</p><div class="language-php ext-php"><pre class="language-php"><code><span class="token variable">$shopId</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AccountWebService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">setApiKey</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;api_key_from_backoffice&#39;</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">getAccount</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">getShops</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token operator">-&gt;</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="create-a-consignment-for-each-carrier-manually" tabindex="-1"><a class="header-anchor" href="#create-a-consignment-for-each-carrier-manually" aria-hidden="true">#</a> Create a consignment for each carrier manually</h2><div class="language-php ext-php"><pre class="language-php"><code><span class="token variable">$postNL</span>   <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>PostNLConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$bpost</span>    <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>BpostConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$dpd</span>      <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>DPDConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$instabox</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\\</span>MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Consignment<span class="token punctuation">\\</span>InstaboxConsignment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Or by using <code>Factory\\ConsignmentFactory</code> with a carrier ID or name, making it easier to dynamically instantiate a consignment:</p><div class="language-php ext-php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>Factory<span class="token punctuation">\\</span>ConsignmentFactory</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Carrier<span class="token punctuation">\\</span>CarrierBpost</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">MyParcelNL<span class="token punctuation">\\</span>Sdk<span class="token punctuation">\\</span>src<span class="token punctuation">\\</span>Model<span class="token punctuation">\\</span>Carrier<span class="token punctuation">\\</span>CarrierPostNL</span><span class="token punctuation">;</span>

<span class="token variable">$postNL</span> <span class="token operator">=</span> <span class="token class-name static-context">ConsignmentFactory</span><span class="token operator">::</span><span class="token function">createByCarrierId</span><span class="token punctuation">(</span><span class="token class-name static-context">CarrierPostNL</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$bpost</span>  <span class="token operator">=</span> <span class="token class-name static-context">ConsignmentFactory</span><span class="token operator">::</span><span class="token function">createByCarrierName</span><span class="token punctuation">(</span><span class="token class-name static-context">CarrierBpost</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,10);function p(e,o){return t}var i=s(a,[["render",p],["__file","02.using-multiple-carriers.html.vue"]]);export{i as default};
