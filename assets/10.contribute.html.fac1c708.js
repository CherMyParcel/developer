import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as r,c as i,a as e,b as o,w as t,d as s,e as c,r as d}from"./app.033e6678.js";const l={},h=e("h3",{id:"to-the-woocommerce-plugin",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#to-the-woocommerce-plugin","aria-hidden":"true"},"#"),s(" To the WooCommerce plugin")],-1),u=s("Clone or download the "),p=s("source code"),g=e("li",null,"If you're planning to change JavaScript or CSS code, see below section for details.",-1),m=e("li",null,"Make your changes",-1),_=e("li",null,"Create a pull request!",-1),f=e("h4",{id:"making-javascript-or-css-changes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#making-javascript-or-css-changes","aria-hidden":"true"},"#"),s(" Making JavaScript or CSS changes")],-1),y=e("h5",{id:"prerequisites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),s(" Prerequisites")],-1),b=s("Docker"),w=s("Node 16"),x=s("Yarn"),v=c(`<h5 id="steps" tabindex="-1"><a class="header-anchor" href="#steps" aria-hidden="true">#</a> Steps</h5><h6 id="install-dependencies" tabindex="-1"><a class="header-anchor" href="#install-dependencies" aria-hidden="true">#</a> Install dependencies</h6><p>Install npm dependencies</p><div class="language-bash ext-sh"><pre class="language-bash"><code>yarn
</code></pre></div><h6 id="make-your-changes" tabindex="-1"><a class="header-anchor" href="#make-your-changes" aria-hidden="true">#</a> Make your changes</h6><ul><li>Please try to conform to our existing code style.</li></ul><h6 id="test-your-changes" tabindex="-1"><a class="header-anchor" href="#test-your-changes" aria-hidden="true">#</a> Test your changes</h6><h6 id="easiest-method" tabindex="-1"><a class="header-anchor" href="#easiest-method" aria-hidden="true">#</a> Easiest method</h6><p>This is only sufficient if you&#39;re running WordPress locally and your source directory is inside your <code>wp-content</code> folder. If this is not the case, continue to the next section.</p><p>Run this after every change:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>yarn build
</code></pre></div><p>Or run this to monitor your changes and rebuild automatically:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>yarn serve
</code></pre></div><h6 id="if-your-wordpress-instance-is-hosted-somewhere-else" tabindex="-1"><a class="header-anchor" href="#if-your-wordpress-instance-is-hosted-somewhere-else" aria-hidden="true">#</a> If your WordPress instance is hosted somewhere else</h6><p>First, build all assets and puts all necessary files into <code>woocommerce-myparcel.zip</code>.</p><div class="language-bash ext-sh"><pre class="language-bash"><code>yarn build
</code></pre></div><p>Then upload this file on the plugins page of your WordPress website to install the plugin.</p><p>You can also upload the plugin folder manually.</p><blockquote><p>Note: We don&#39;t recommend uploading the whole source folder to your website&#39;s <code>wp-content</code> folder, but it does work. A better solution is to extract the created .zip file and upload its contents to your website.</p></blockquote>`,19);function k(S,C){const a=d("AutoLink");return r(),i("div",null,[h,e("ol",null,[e("li",null,[u,o(a,{item:"https://github.com/myparcelnl/woocommerce"},{default:t(()=>[p]),_:1})]),g,m,_]),f,y,e("ul",null,[e("li",null,[o(a,{item:"https://www.docker.com/"},{default:t(()=>[b]),_:1})]),e("li",null,[o(a,{item:"https://nodejs.org/en/"},{default:t(()=>[w]),_:1})]),e("li",null,[o(a,{item:"https://classic.yarnpkg.com/en/docs/install"},{default:t(()=>[x]),_:1})])]),v])}var I=n(l,[["render",k],["__file","10.contribute.html.vue"]]);export{I as default};
