import{_ as m}from"./plugin-vue_export-helper.21dcd24c.js";import{o as g,c as v,a,w as t,b as n,d as s,e as p,r as o}from"./app.9185cc75.js";const _={},f=s("This is the MyParcel delivery options module for use in any e-commerce platform's checkout, by "),b=s(" , "),w=s(" and "),x=s(" customers. It's used to show your customers the possible delivery and/or pickup options for their location, based on your settings. It only has the bare minimum css styling, so it should integrate with the design of your webshop easily."),j=n("h2",{id:"browser-support",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#browser-support","aria-hidden":"true",tabindex:"-1"},"#"),s(" Browser support")],-1),S=s("This app runs on "),C=s("Vue.js"),E=s(" 2.6.14, it supports IE9 and up."),T=n("h2",{id:"sandbox",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#sandbox","aria-hidden":"true",tabindex:"-1"},"#"),s(" Sandbox")],-1),q=s("An example of the delivery options functionality can be found in our "),D=s("sandbox"),M=s(". Here you can try out every combination of settings and copy the code for use in your project."),I=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true",tabindex:"-1"},"#"),s(" Installation")],-1),P=n("h3",{id:"dependencies",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#dependencies","aria-hidden":"true",tabindex:"-1"},"#"),s(" Dependencies")],-1),O=s("Install "),A=s("@myparcel/delivery-options"),L=s(" with your package manager:"),N=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` @myparcel/delivery-options
`)])])],-1),B=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"pnpm"),s(),n("span",{class:"token function"},"add"),s(` @myparcel/delivery-options
`)])])],-1),F=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(` @myparcel/delivery-options
`)])])],-1),H=n("h3",{id:"usage",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#usage","aria-hidden":"true",tabindex:"-1"},"#"),s(" Usage")],-1),W=s("Is "),G=s("Vue.js"),V=s(" ^2.6.0 present on the page you want to use the Delivery Options on? "),U=n("ul",null,[n("li",null,[s("Yes: Include "),n("code",null,"dist/myparcel.lib.js"),s(".")]),n("li",null,[s("No: Include "),n("code",null,"dist/myparcel.js"),s(".")])],-1),R=p(`<li>Place <code>&lt;div id=&quot;myparcel-delivery-options&quot;&gt;&lt;/div&gt;</code> in your HTML.</li><li>Trigger the following event:<div class="language-javascript ext-js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel_update_delivery_options&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li>The delivery options will be rendered inside the div you created before.</li>`,3),Y=s("Check out the "),z=s("available options"),J=s(" and "),K=s("usage examples"),Q=s(" for further configuration."),Z=p(`<h2 id="available-options" tabindex="-1"><a class="header-anchor" href="#available-options" aria-hidden="true" tabindex="-1">#</a> Available options</h2><div class="language-javascript ext-js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>MyParcelConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">&#39;belgie&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// Use this object to enable carriers and override settings per carrier.</span>
    <span class="token literal-property property">carrierSettings</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">bpost</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">deliveryDaysWindow</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
        <span class="token literal-property property">allowDeliveryOptions</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">allowPickupLocations</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dpd</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowDeliveryOptions</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">allowPickupLocations</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

    <span class="token comment">// All settings below can be overridden per carrier via the carrierSettings object</span>

    <span class="token comment">// The price for each option</span>
    <span class="token literal-property property">priceMorningDelivery</span><span class="token operator">:</span> <span class="token number">7.95</span><span class="token punctuation">,</span>
    <span class="token literal-property property">priceStandardDelivery</span><span class="token operator">:</span> <span class="token number">5.85</span><span class="token punctuation">,</span>
    <span class="token literal-property property">priceSameDayDelivery</span><span class="token operator">:</span> <span class="token number">7.65</span><span class="token punctuation">,</span>
    <span class="token literal-property property">priceEveningDelivery</span><span class="token operator">:</span> <span class="token number">6.25</span><span class="token punctuation">,</span>
    <span class="token literal-property property">priceSignature</span><span class="token operator">:</span> <span class="token number">0.35</span><span class="token punctuation">,</span>
    <span class="token literal-property property">priceOnlyRecipient</span><span class="token operator">:</span> <span class="token number">0.30</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pricePickup</span><span class="token operator">:</span> <span class="token number">5.85</span><span class="token punctuation">,</span>

    <span class="token comment">// Shipment options</span>
    <span class="token literal-property property">allowSaturdayDelivery</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">allowPickupLocations</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">allowSignature</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>

    <span class="token comment">// Other settings</span>
    <span class="token literal-property property">dropOffDays</span><span class="token operator">:</span> <span class="token string">&#39;1;2;3;4;5;6&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cutoffTime</span><span class="token operator">:</span> <span class="token string">&#39;15:00&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">deliveryDaysWindow</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dropOffDelay</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">strings</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">saturdayDeliveryTitle</span><span class="token operator">:</span> <span class="token string">&#39;Zaterdaglevering&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">wrongPostalCodeCity</span><span class="token operator">:</span> <span class="token string">&#39;Combinatie postcode/plaats onbekend&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// Address strings</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Plaats&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">postcode</span><span class="token operator">:</span> <span class="token string">&#39;Postcode&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">houseNumber</span><span class="token operator">:</span> <span class="token string">&#39;Huisnummer&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">addressNotFound</span><span class="token operator">:</span> <span class="token string">&#39;Adresgegevens niet ingevuld&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// Delivery moment titles.</span>
    <span class="token comment">// If any of these is not set, the delivery time will be visible instead.</span>
    <span class="token literal-property property">deliveryEveningTitle</span><span class="token operator">:</span> <span class="token string">&#39;Avondlevering&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">deliveryMorningTitle</span><span class="token operator">:</span> <span class="token string">&#39;Ochtendlevering&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">deliveryStandardTitle</span><span class="token operator">:</span> <span class="token string">&#39;Standaardlevering&#39;</span><span class="token punctuation">,</span>

    <span class="token literal-property property">deliveryTitle</span><span class="token operator">:</span> <span class="token string">&#39;Bezorgen op&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pickupTitle</span><span class="token operator">:</span> <span class="token string">&#39;Afhalen op locatie&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// Shipment options</span>
    <span class="token literal-property property">onlyRecipientTitle</span><span class="token operator">:</span> <span class="token string">&#39;Home address only&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">signatureTitle</span><span class="token operator">:</span> <span class="token string">&#39;Handtekening&#39;</span><span class="token punctuation">,</span>

    <span class="token literal-property property">pickUpFrom</span><span class="token operator">:</span> <span class="token string">&#39;Afhalen vanaf&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">openingHours</span><span class="token operator">:</span> <span class="token string">&#39;Openingstijden&#39;</span><span class="token punctuation">,</span>

    <span class="token comment">// Other strings</span>
    <span class="token literal-property property">closed</span><span class="token operator">:</span> <span class="token string">&#39;Gesloten&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">from</span><span class="token operator">:</span> <span class="token string">&#39;Vanaf&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">loadMore</span><span class="token operator">:</span> <span class="token string">&#39;Laad meer&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">retry</span><span class="token operator">:</span> <span class="token string">&#39;Opnieuw&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cc</span><span class="token operator">:</span> <span class="token string">&#39;BE&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Antwerpen&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">postalCode</span><span class="token operator">:</span> <span class="token string">&#39;2000&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,2),$=s("When there is no title set for "),X=n("code",null,"deliveryMorningTitle",-1),nn=s(", "),sn=n("code",null,"deliveryStandardTitle",-1),an=s(" or "),tn=n("code",null,"deliveryEveningTitle",-1),en=s(" , the delivery time will automatically be visible. For more in-depth explanation of each config item and string and an interactive demo please see our "),on=s("sandbox"),pn=p(`<p>To get the object with the selected options from the delivery options do the following:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token keyword">const</span> data <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#mypa-input&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \`obj\` will be something like this:</span>
<span class="token comment">// {</span>
<span class="token comment">//   &quot;delivery&quot;: &quot;deliver&quot;,</span>
<span class="token comment">//   &quot;deliveryDate&quot;: &quot;8-8-2019&quot;,</span>
<span class="token comment">//   &quot;deliveryMoment&quot;: &quot;standard&quot;,</span>
<span class="token comment">//   &quot;shipmentOptions&quot;: {signature: true, only_recipient: false}</span>
<span class="token comment">// }</span>
</code></pre></div><h2 id="usage-examples" tabindex="-1"><a class="header-anchor" href="#usage-examples" aria-hidden="true" tabindex="-1">#</a> Usage Examples</h2><p>These examples assume you&#39;ve already loaded the delivery options in your page. See [Installation] if you haven&#39;t. You have to provide a configuration file in the following format as <code>window.MyParcelConfig</code> and initialize the delivery options with an event.</p><h3 id="setting-up-the-configuration" tabindex="-1"><a class="header-anchor" href="#setting-up-the-configuration" aria-hidden="true" tabindex="-1">#</a> Setting up the configuration</h3><p>This is an example.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>MyParcelConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">&#39;belgie&#39;</span><span class="token punctuation">,</span> <span class="token comment">// REQUIRED!</span>
    <span class="token literal-property property">carrierSettings</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">bpost</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowDeliveryOptions</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">allowPickupLocations</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dpd</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowDeliveryOptions</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">allowPickupLocations</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">address</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cc</span><span class="token operator">:</span> <span class="token string">&#39;BE&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> <span class="token string">&#39;Antwerpen&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">postalCode</span><span class="token operator">:</span> <span class="token string">&#39;2000&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// Trigger this event on the document to tell the delivery options to update.</span>
<span class="token comment">// Usually only needed on initializing and when the address changes.</span>
document<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel_update_delivery_options&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="getting-the-address-from-your-environment" tabindex="-1"><a class="header-anchor" href="#getting-the-address-from-your-environment" aria-hidden="true" tabindex="-1">#</a> Getting the address from your environment</h3><ol><li>Set up the link between the address fields and the delivery options:<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * Get data from form fields and put it in the global MyParcelConfig.
 */</span>
<span class="token keyword">function</span> <span class="token function">updateAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  window<span class="token punctuation">.</span>MyParcelConfig<span class="token punctuation">.</span>address <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">cc</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#country&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
    <span class="token literal-property property">postalCode</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#house_number&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
    <span class="token literal-property property">number</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#postcode&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
    <span class="token literal-property property">city</span><span class="token operator">:</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#address_1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token comment">/*
   * Send the event that tells the delivery options module to reload data.
   */</span>
  document<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel_update_delivery_options&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// IE9\u201311 compatible example</span>
  <span class="token keyword">var</span> event <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createEvent</span><span class="token punctuation">(</span><span class="token string">&#39;HTMLEvents&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  event<span class="token punctuation">.</span><span class="token function">initEvent</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel_update_delivery_options&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>event<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li><li>Add event listeners to each address field to execute this function:<div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// ES6 example, use var for older environments.</span>
<span class="token keyword">const</span> addressFields <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token string">&#39;&lt;Country field selector&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;&lt;Postal code field selector&gt;&#39;</span><span class="token punctuation">,</span>
  <span class="token string">&#39;&lt;Address line 1 field selector&gt;&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

addressFields<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">field</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;change&#39;</span><span class="token punctuation">,</span> updateAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li>Now, when a user changes the value in any of the fields set in <code>addressFields</code> the <code>window.MyParcelConfig</code> will be updated and the delivery options module will receive the event that tells it to update. The delivery options will reload and fetch the available options for the new address.</li></ol><h3 id="usage-in-forms" tabindex="-1"><a class="header-anchor" href="#usage-in-forms" aria-hidden="true" tabindex="-1">#</a> Usage in forms</h3><p>You&#39;ll often want to use the delivery options module in a checkout form in your webshop software. Below are some things to keep in mind, but if you&#39;re interested in doing this you should check out our Magento2 and WooCommerce plugins locally and read through these implementations. You can find the best files to get started with in [Integration examples]. We also recommend you join our [Slack] support channel to get (fast!) answers to any questions you might have.</p><ol><li>Follow the steps in [Installation] and copy <code>myparcel.js</code> (Vue included) or <code>myparcel.lib.js</code> (Vue not included) from <code>node_modules/@myparcel/delivery-options/dist</code> to your js folder.</li><li>The things you&#39;ll need to do :</li></ol><ul><li>Have either a <code>window.MyParcelConfig</code> or dispatch a <code>CustomEvent</code> with the settings you want in the page where you&#39;re loading the delivery options.</li><li>Send events to the delivery options telling it when to update or rerender.</li><li>Listen to the delivery options&#39; events to update your application according to the changes.</li><li>Attach the output data to the order that is being created.</li></ul><h3 id="allowing-or-disallowing-settings-for-specific-countries" tabindex="-1"><a class="header-anchor" href="#allowing-or-disallowing-settings-for-specific-countries" aria-hidden="true" tabindex="-1">#</a> Allowing or disallowing settings for specific countries</h3><p>Let&#39;s say you want to disallow delivery to the Netherlands, only allow pickup in Belgium, for bpost. For DPD you want pickup only, wherever it&#39;s possible.</p><p>The configuration would look like this:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span>MyParcelConfig <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">config</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">platform</span><span class="token operator">:</span> <span class="token string">&#39;belgie&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">carrierSettings</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">bpost</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// Allow delivery options in all countries it&#39;s possible in except the Netherlands.</span>
        <span class="token literal-property property">allowDeliveryOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">allow</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;NL&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token comment">// Only allow pickup locations in Belgium.</span>
        <span class="token literal-property property">allowPickupLocations</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">allow</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">items</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;BE&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">dpd</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">allowDeliveryOptions</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token literal-property property">allowPickupLocations</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>This is currently only possible for <code>allowDeliveryOptions</code> and <code>allowPickupLocations</code>. If you want this feature to be available for more settings, please create a feature request. Or, if you want to do it yourself you can send us a pull request!</p><h2 id="integration-examples" tabindex="-1"><a class="header-anchor" href="#integration-examples" aria-hidden="true" tabindex="-1">#</a> Integration examples</h2><p>Here are some existing implementations that can help you get started:</p>`,20),ln=n("p",null,"From our WooCommerce implementation",-1),cn=s("Backend: "),rn=s("/includes/frontend/class-wcmp-checkout.php"),un=s("Frontend: "),dn=s("/assets/js/wcmp-frontend.js"),kn=n("p",null,"From our Magento 2 implementation",-1),hn=s("Backend: "),yn=s("/Model/Checkout/DeliveryOptionsToShippingMethods.php"),mn=s("Frontend: "),gn=s("/view/frontend/web/js/view/delivery-options.js"),vn=n("p",null,"It's more complex in Magento 2 because of the way its shipping methods work.",-1),_n=p(`<h3 id="attach-data-to-an-order-using-a-hidden-input" tabindex="-1"><a class="header-anchor" href="#attach-data-to-an-order-using-a-hidden-input" aria-hidden="true" tabindex="-1">#</a> Attach data to an order using a hidden input</h3><p>In WooCommerce and Magento 2 we injected a hidden text input inside the checkout <code>&lt;form&gt;</code> elements to hold this data and automatically pass it to the <code>$_POST</code> variable.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code><span class="token comment">// Listen to the CustomEvent the delivery option sends back out once its data has been updated</span>
document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel_updated_delivery_options&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  myHiddenInput<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>detail<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// And now trigger updating the checkout of whatever platform you&#39;re using.</span>
  <span class="token comment">// WooCommerce example:</span>
  document<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;update_checkout&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// In Magento 2 we would update quote.shippingMethod here to trigger the changes.</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="deselect-options" tabindex="-1"><a class="header-anchor" href="#deselect-options" aria-hidden="true" tabindex="-1">#</a> Deselect options</h3>`,4),fn=s("You might want to integrate the delivery options into a list of existing shipping methods, like we've done in "),bn=s("Magento 2"),wn=s(" . So when the user selects a different shipping method you'll want the delivery options to appear unselected."),xn=p(`<p>Note: If you only have one option, so either &quot;delivery&quot; or &quot;pickup&quot;, the option will appear disabled. Until there&#39;s a built in solution, there&#39;s the following workaround.</p><p>If you only use delivery:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel-delivery-options__delivery--deliver&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span>
  <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre></div><p>If you only use pickup:</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel-delivery-options__delivery--pickup&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>disabled <span class="token operator">=</span>
  <span class="token boolean">false</span><span class="token punctuation">;</span>
</code></pre></div>`,5),jn=p(`<p>To deselect all options, dispatch the <code>myparcel_disable_delivery_options</code> event. You could do this as when your users select a different shipping method, for example.</p><div class="language-javascript ext-js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&#39;myparcel_disable_delivery_options&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>The delivery options will look like this:</p>`,3),Sn=n("h2",{id:"contributing",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#contributing","aria-hidden":"true",tabindex:"-1"},"#"),s(" Contributing")],-1),Cn=n("li",null,"Fork this repository and clone it to your machine",-1),En=n("li",null,[s("Run "),n("code",null,"npm install")],-1),Tn=n("li",null,[s("Run "),n("code",null,"npm run serve"),s(" to start the app")],-1),qn=n("li",null,[s("Make your changes conforming to our code style "),n("ul",null,[n("li",null,"We recommend enabling ESLint in your editor to make this easier."),n("li",null,"Add/update unit tests if necessary.")])],-1),Dn=s("Commit, keeping the following rules in mind: "),Mn=s("We use "),In=s("Conventional Commits"),Pn=s(" and "),On=s("semantic-release"),An=s(" to simplify the process of releasing updates by automating release notes and changelogs based on the rules of "),Ln=s("@commitlint/config-conventional"),Nn=s("."),Bn=n("li",null,"If your commit messages aren't formatted according to these rules, Git hooks will prevent you from committing your changes.",-1),Fn=n("li",null,[s("Create a pull request "),n("ul",null,[n("li",null,"Keep your pull requests focused on single subjects."),n("li",null,"Please explain what you changed and why."),n("li",null,"We will check your code and thoroughly test it before merging.")])],-1);function Hn(Wn,Gn){const d=o("NpmShield"),k=o("Shield"),r=o("GitHubShield"),h=o("Stack"),l=o("DataType"),e=o("AutoLink"),c=o("CodeGroupItem"),y=o("CodeGroup"),u=o("Message"),i=o("MPImg");return g(),v("div",null,[a(h,{class:"grid-flow-col auto-cols-max gap-1"},{default:t(()=>[a(d,{package:"@myparcel/delivery-options"}),a(k,{path:"npm/dependency-version/@myparcel/delivery-options/vue"}),a(r,{repo:"myparcelnl/delivery-options",link:"issues"}),a(r,{repo:"myparcelnl/delivery-options",link:"pulls"})]),_:1}),n("p",null,[f,a(l,{type:"platform",name:"myparcel"}),b,a(l,{type:"platform",name:"belgie"}),w,a(l,{type:"platform",name:"flespakket"}),x]),j,n("p",null,[S,a(e,{item:"https://vuejs.org/"},{default:t(()=>[C]),_:1}),E]),T,n("p",null,[q,a(e,{item:"https://myparcelnl.github.io/delivery-options/"},{default:t(()=>[D]),_:1}),M]),I,P,n("p",null,[O,a(e,{item:"https://www.npmjs.com/package/@myparcel/delivery-options"},{default:t(()=>[A]),_:1}),L]),a(y,{id:"npm"},{default:t(()=>[a(c,{title:"yarn"},{default:t(()=>[N]),_:1}),a(c,{title:"pnpm"},{default:t(()=>[B]),_:1}),a(c,{title:"npm"},{default:t(()=>[F]),_:1})]),_:1}),H,n("ol",null,[n("li",null,[W,a(e,{item:"https://vuejs.org/"},{default:t(()=>[G]),_:1}),V,U]),R]),a(u,{title:"",type:"tip"},{default:t(()=>[n("p",null,[Y,a(e,{item:"#available-options"},{default:t(()=>[z]),_:1}),J,a(e,{item:"#usage-examples"},{default:t(()=>[K]),_:1}),Q])]),_:1}),Z,n("p",null,[$,X,nn,sn,an,tn,en,a(e,{item:"https://myparcelnl.github.io/delivery-options/"},{default:t(()=>[on]),_:1})]),pn,n("ul",null,[n("li",null,[ln,n("ul",null,[n("li",null,[cn,a(e,{item:"https://github.com/myparcelnl/woocommerce/blob/main/includes/frontend/class-wcmp-checkout.php"},{default:t(()=>[rn]),_:1})]),n("li",null,[un,a(e,{item:"https://github.com/myparcelnl/woocommerce/blob/main/src/js/wcmp-frontend.js"},{default:t(()=>[dn]),_:1})])])]),n("li",null,[kn,n("ul",null,[n("li",null,[hn,a(e,{item:"https://github.com/myparcelnl/magento/blob/develop/Model/Checkout/DeliveryOptionsToShippingMethods.php"},{default:t(()=>[yn]),_:1})]),n("li",null,[mn,a(e,{item:"https://github.com/myparcelnl/magento/blob/develop/view/frontend/web/js/view/delivery-options.js"},{default:t(()=>[gn]),_:1})])])])]),a(u,{title:"",type:"note"},{default:t(()=>[vn]),_:1}),_n,n("p",null,[fn,a(e,{item:"https://github.com/myparcelnl/magento/blob/504ea103f6b3042e1dfa7debc022251eeaba381e/view/frontend/web/js/view/delivery-options.js#L231"},{default:t(()=>[bn]),_:1}),wn]),a(i,{src:"/documentation/delivery-options/deselect-1.png",alt:"Deselect 1"}),xn,a(i,{src:"/documentation/delivery-options/deselect-2.png",alt:"Deselect 2"}),jn,a(i,{src:"/documentation/delivery-options/deselect-3.png",alt:"Deselect 3"}),Sn,n("ol",null,[Cn,En,Tn,qn,n("li",null,[Dn,n("ul",null,[n("li",null,[Mn,a(e,{item:"https://www.conventionalcommits.org/en/v1.0.0/#summary"},{default:t(()=>[In]),_:1}),Pn,a(e,{item:"https://github.com/semantic-release/semantic-release"},{default:t(()=>[On]),_:1}),An,a(e,{item:"https://github.com/conventional-changelog/commitlint"},{default:t(()=>[Ln]),_:1}),Nn]),Bn])]),Fn])])}var Rn=m(_,[["render",Hn],["__file","60.delivery-options.html.vue"]]);export{Rn as default};
